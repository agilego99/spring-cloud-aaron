spring.application.name=aaron-zuul-demo
server.port=2103

eureka.client.serviceUrl.defaultZone=http://aaron:999999@localhost:8761/eureka/
eureka.instance.preferIpAddress=true
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

# 配置路由轉發：透過 zuul.routes 配置路由轉發，aaron 是自定義的名稱，當訪問 google/** 開始的地址時，就會跳轉到 http://www.google.com
zuul.routes.google.path=/google/**
zuul.routes.google.url=http://www.google.com

# 定具體路由服務：為每一個服務都配置一個路由轉發規則
zuul.routes.aaron-eureka-client-user-service.path=/api-house/**

# 路由前綴：於 API 前配置一個統一的前綴
zuul.prefix=/rest

# 本地跳轉：Zuul 的 API 路由提供本地跳轉功能，通過 forward 就可以實現
zuul.routes.aaron-zuul-demo.path=/api/**
zuul.routes.aaron-zuul-demo.url=forward:/local

# 通過配置禁用過濾器；格式為 zuul.過濾器類別名稱，過濾氣類型.disable=true
# zuul.IpFilter.pre.disable=true

# Zuul 重試機制
zuul.retryable=true
ribbon.ConnectTimeout=1000
ribbon.ReadTimeout=1000
ribbon.MaxAutoRetries=1
ribbon.MaxAutoRetriesNextServer=3
ribbon.OkToRetryOnAllOperations=true
ribbon.retryableStatusCodes=500,404,502

# 當 @EnableZuulProxy 與 Spring Boot Actuator 配合使用時，Zuul 會暴露一個路由管理端點 /routes；借助這個端點，可以方便、直觀查看以及管理 Zuul 的路由。
management.endpoints.web.exposure.include=*


zuul.include-debug-header=true
#zuul.debug.request=true
zuul.debug.parameter=zdebug